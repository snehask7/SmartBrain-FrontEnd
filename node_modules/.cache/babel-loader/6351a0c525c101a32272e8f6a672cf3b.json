{"ast":null,"code":"var _jsxFileName = \"/home/sneha/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './Components/Navigation/Navigation';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport Logo from './Components/Logo/Logo';\nimport Clarifai from 'clarifai';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport Register from './Components/Register/Register';\nimport Particles from 'react-particles-js';\nimport SignIn from './Components/SignIn/SignIn';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: 'd946ffbdf438480a8197b49ced9268a4'\n}); //for the particles bg\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 70,\n      density: {\n        enable: true,\n        value_area: 400\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      }); // console.log(this.state.input);\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiface = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height); // console.log(width,height);\n      // console.log(clarifaiface);\n\n      return {\n        leftCol: clarifaiface.left_col * width,\n        topRow: clarifaiface.top_row * height,\n        rightCol: width - clarifaiface.right_col * width,\n        bottomRow: height - clarifaiface.bottom_row * height\n      };\n    };\n\n    this.displaybox = box => {\n      this.setState({\n        box: box\n      });\n      console.log(this.state.box);\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageURL: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('https://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displaybox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageURL: '',\n      box: {},\n      route: 'SignIn',\n      isSignedIn: false,\n      user: {\n        email: '',\n        id: '',\n        name: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: this.state.isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }), this.state.route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      box: this.state.box,\n      imageURL: this.state.imageURL,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    })) : this.state.route === 'SignIn' ? /*#__PURE__*/React.createElement(SignIn, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 16\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 16\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/sneha/facerecognitionbrain/src/App.js"],"names":["React","Component","Navigation","FaceRecognition","Logo","Clarifai","ImageLinkForm","Rank","Register","Particles","SignIn","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","loadUser","data","setState","user","id","name","email","entries","joined","onInputChange","event","input","target","calculateFaceLocation","clarifaiface","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displaybox","box","console","log","state","onButtonSubmit","imageURL","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","onRouteChange","route","isSignedIn","render"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport Navigation from './Components/Navigation/Navigation';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport Logo from './Components/Logo/Logo';\nimport Clarifai from 'clarifai';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport Register from './Components/Register/Register';\nimport Particles from 'react-particles-js';\nimport SignIn from './Components/SignIn/SignIn';\n\nimport './App.css';\nconst app=new Clarifai.App({\n  apiKey:'d946ffbdf438480a8197b49ced9268a4'\n});\n\n//for the particles bg\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 70,\n      density: {\n        enable: true,\n        value_area: 400\n      }\n    }\n  }\n}\n\nclass App extends Component{ \n  constructor(){ \n    super(); \n    this.state={ input: '',\n                 imageURL:'', \n                 box: {}, \n                 route: 'SignIn',\n                 isSignedIn: false,\n                 user:{ email: '',\n                        id: '',\n                        name: '',\n                        entries: 0,\n                        joined: ''\n                     }\n                }\n\n }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  //onInputChange is a property of app //when urlentered \n\n  onInputChange=(event) =>{ \n      this.setState({input: event.target.value}); \n      // console.log(this.state.input);\n    }\n\n  //to make the box\n  calculateFaceLocation=(data) => {\n    const clarifaiface = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    // console.log(width,height);\n    // console.log(clarifaiface);\n    return {\n      leftCol: (clarifaiface.left_col * width),\n      topRow: clarifaiface.top_row * height,\n      rightCol: width-(clarifaiface.right_col * width),\n      bottomRow: height-(clarifaiface.bottom_row * height)\n    }\n  }\n\n\ndisplaybox =(box) =>{\n\n  this.setState({box :box});\n    console.log(this.state.box);\n}\n// console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n  //when url submitted\n  onButtonSubmit=()=>{\n    this.setState({imageURL: this.state.input});\n    app.models\n      .predict(\n            Clarifai.FACE_DETECT_MODEL,\n             this.state.input)\n      .then(response=>  {\n        if(response){\n          fetch('https://localhost:3000/image',{\n             method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                  id: this.state.user.id\n           })\n         })\n          .then(response => response.json())\n          .then(count=> {\n             this.setState(Object.assign(this.state.user, { entries: count}))\n          })\n        }\n        this.displaybox(this.calculateFaceLocation(response))\n      })\n     .catch(err => console.log(err));\n  }\n\n  onRouteChange=(route)=>{\n    if(route === 'signout'){\n      this.setState({isSignedIn:false})\n    }\n    else if(route === 'home')\n    {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route})\n  }\n    render(){\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesOptions}\n        />\n        <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange} />\n        { this.state.route ==='home'\n          ? \n          <div>\n            <Logo />\n           <Rank name={this.state.user.name} entries={this.state.user.entries} />\n          <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n\n          <FaceRecognition box={this.state.box} imageURL={this.state.imageURL} />\n          </div>\n          : (\n              this.state.route === 'SignIn'\n              ?<SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n              :<Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n\n            )\n\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}