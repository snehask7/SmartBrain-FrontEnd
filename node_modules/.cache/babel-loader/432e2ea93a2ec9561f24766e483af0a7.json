{"ast":null,"code":"var _jsxFileName = \"/home/sneha/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './Components/Navigation/Navigation';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport Logo from './Components/Logo/Logo';\nimport Clarifai from 'clarifai';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: 'd946ffbdf438480a8197b49ced9268a4'\n}); //for the particles bg\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 50,\n      density: {\n        enable: true,\n        value_area: 500 // Denser the smaller the number.\n\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      }); // console.log(this.state.input);\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiface = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      console.log(width, height);\n      console.log(clarifaiface);\n      return {\n        leftCol: clarifaiface.left_col * width,\n        topRow: clarifaiface.top_row * height,\n        rightCol: width - clarifaiface.right_col * width,\n        bottomRow: height - clarifaiface.bottom_row * height\n      };\n    };\n\n    this.displaybox = box => {\n      this.setState({\n        box: box\n      });\n      console.log(this.state.box);\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageURL: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displaybox(this.calculateFaceLocation(response))).catch(err => console.log(err));\n    };\n\n    this.state = {\n      input: '',\n      imageURL: '',\n      box: {}\n    };\n  } //onInputChange is a property of app //when urlentered \n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: {\n        particlesOptions\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      box: this.state.box,\n      imageURL: this.state.imageURL,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/sneha/facerecognitionbrain/src/App.js"],"names":["React","Component","Navigation","FaceRecognition","Logo","Clarifai","ImageLinkForm","Rank","Particles","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","onInputChange","event","setState","input","target","calculateFaceLocation","data","clarifaiface","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","console","log","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displaybox","box","state","onButtonSubmit","imageURL","models","predict","FACE_DETECT_MODEL","then","response","catch","err","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,eAAP,MAA4B,8CAA5B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AAEA,OAAO,WAAP;AACA,MAAMC,GAAG,GAAC,IAAIJ,QAAQ,CAACK,GAAb,CAAiB;AACzBC,EAAAA,MAAM,EAAC;AADkB,CAAjB,CAAV,C,CAIA;;AACA,MAAMC,gBAAgB,GAAC;AACrBC,EAAAA,SAAS,EAAE;AACXC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,IADD;AAEPC,QAAAA,UAAU,EAAE,GAFL,CAES;;AAFT;AAFH;AADG;AADU,CAAvB;;AAYA,MAAMR,GAAN,SAAkBT,SAAlB,CAA2B;AACzBkB,EAAAA,WAAW,GAAE;AACX;;AADW,SASbC,aATa,GASEC,KAAD,IAAU;AACpB,WAAKC,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAEF,KAAK,CAACG,MAAN,CAAaT;AAArB,OAAd,EADoB,CAEpB;AACD,KAZU;;AAAA,SAebU,qBAfa,GAeUC,IAAD,IAAU;AAC9B,YAAMC,YAAY,GAAGD,IAAI,CAACE,OAAL,CAAa,CAAb,EAAgBF,IAAhB,CAAqBG,OAArB,CAA6B,CAA7B,EAAgCC,WAAhC,CAA4CC,YAAjE;AACA,YAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAd;AACA,YAAMC,KAAK,GAAGC,MAAM,CAACJ,KAAK,CAACG,KAAP,CAApB;AACA,YAAME,MAAM,GAAGD,MAAM,CAACJ,KAAK,CAACK,MAAP,CAArB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAAkBE,MAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYZ,YAAZ;AACA,aAAO;AACLa,QAAAA,OAAO,EAAGb,YAAY,CAACc,QAAb,GAAwBN,KAD7B;AAELO,QAAAA,MAAM,EAAEf,YAAY,CAACgB,OAAb,GAAuBN,MAF1B;AAGLO,QAAAA,QAAQ,EAAET,KAAK,GAAER,YAAY,CAACkB,SAAb,GAAyBV,KAHrC;AAILW,QAAAA,SAAS,EAAET,MAAM,GAAEV,YAAY,CAACoB,UAAb,GAA0BV;AAJxC,OAAP;AAMD,KA5BY;;AAAA,SA+BfW,UA/Be,GA+BFC,GAAD,IAAQ;AAElB,WAAK3B,QAAL,CAAc;AAAC2B,QAAAA,GAAG,EAAEA;AAAN,OAAd;AACEX,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKW,KAAL,CAAWD,GAAvB;AACH,KAnCc;;AAAA,SAsCbE,cAtCa,GAsCE,MAAI;AACjB,WAAK7B,QAAL,CAAc;AAAC8B,QAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAW3B;AAAtB,OAAd;AACAd,MAAAA,GAAG,CAAC4C,MAAJ,CACGC,OADH,CAEQjD,QAAQ,CAACkD,iBAFjB,EAGS,KAAKL,KAAL,CAAW3B,KAHpB,EAIGiC,IAJH,CAIQC,QAAQ,IAAI,KAAKT,UAAL,CAAgB,KAAKvB,qBAAL,CAA2BgC,QAA3B,CAAhB,CAJpB,EAKEC,KALF,CAKQC,GAAG,IAAIrB,OAAO,CAACC,GAAR,CAAYoB,GAAZ,CALf;AAMD,KA9CY;;AAEX,SAAKT,KAAL,GAAW;AAAE3B,MAAAA,KAAK,EAAE,EAAT;AACE6B,MAAAA,QAAQ,EAAC,EADX;AAEEH,MAAAA,GAAG,EAAE;AAFP,KAAX;AAIF,GAPyB,CAQzB;;;AAyCEW,EAAAA,MAAM,GAAE;AACR,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAY,MAAA,SAAS,EAAC,WAAtB;AACE,MAAA,MAAM,EAAE;AAAChD,QAAAA;AAAD,OADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAIE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAMG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANH,eAOE,oBAAC,aAAD;AAAe,MAAA,aAAa,EAAE,KAAKQ,aAAnC;AAAkD,MAAA,cAAc,EAAE,KAAK+B,cAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,eASE,oBAAC,eAAD;AAAiB,MAAA,GAAG,EAAE,KAAKD,KAAL,CAAWD,GAAjC;AAAsC,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWE,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF;AAcD;;AAhEwB;;AAmE3B,eAAe1C,GAAf","sourcesContent":["import React,{Component} from 'react';\nimport Navigation from './Components/Navigation/Navigation';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport Logo from './Components/Logo/Logo';\nimport Clarifai from 'clarifai';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport Particles from 'react-particles-js';\n\nimport './App.css';\nconst app=new Clarifai.App({\n  apiKey:'d946ffbdf438480a8197b49ced9268a4'\n});\n\n//for the particles bg\nconst particlesOptions={\n  particles: {\n  number: {\n    value: 50,\n    density: {\n      enable: true,\n      value_area: 500 // Denser the smaller the number.\n    }\n  },\n }\n}\n\nclass App extends Component{ \n  constructor(){ \n    super(); \n    this.state={ input: '',\n                 imageURL:'', \n                 box: {}, \n                }\n }\n  //onInputChange is a property of app //when urlentered \n\n  onInputChange=(event) =>{ \n      this.setState({input: event.target.value}); \n      // console.log(this.state.input);\n    }\n\n  //to make the box\n  calculateFaceLocation=(data) => {\n    const clarifaiface = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log(width,height);\n    console.log(clarifaiface);\n    return {\n      leftCol: (clarifaiface.left_col * width),\n      topRow: clarifaiface.top_row * height,\n      rightCol: width-(clarifaiface.right_col * width),\n      bottomRow: height-(clarifaiface.bottom_row * height)\n    }\n  }\n\n\ndisplaybox =(box) =>{\n\n  this.setState({box :box});\n    console.log(this.state.box);\n}\n// console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n  //when url submitted\n  onButtonSubmit=()=>{\n    this.setState({imageURL: this.state.input});\n    app.models\n      .predict(\n            Clarifai.FACE_DETECT_MODEL,\n             this.state.input)\n      .then(response=>  this.displaybox(this.calculateFaceLocation(response)))\n     .catch(err => console.log(err));\n  }\n\n    render(){\n    return (\n      <div className=\"App\">\n        <Particles  className='particles'\n          params={{particlesOptions}}\n         />\n        <Navigation />\n        <Logo />\n         <Rank />\n        <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n\n        <FaceRecognition box={this.state.box} imageURL={this.state.imageURL} />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}