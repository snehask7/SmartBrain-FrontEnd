{"ast":null,"code":"var _jsxFileName = \"/home/sneha/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './Components/Navigation/Navigation';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport Logo from './Components/Logo/Logo';\nimport Clarifai from 'clarifai';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport Register from './Components/Register/Register';\nimport Particles from 'react-particles-js';\nimport SignIn from './Components/SignIn/SignIn';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: 'd946ffbdf438480a8197b49ced9268a4'\n}); //for the particles bg\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 70,\n      density: {\n        enable: true,\n        value_area: 400\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageURL: '',\n  box: {},\n  route: 'SignIn',\n  isSignedIn: false,\n  user: {\n    email: '',\n    id: '',\n    name: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      }); // console.log(this.state.input);\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiface = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height); // console.log(width,height);\n      // console.log(clarifaiface);\n\n      return {\n        leftCol: clarifaiface.left_col * width,\n        topRow: clarifaiface.top_row * height,\n        rightCol: width - clarifaiface.right_col * width,\n        bottomRow: height - clarifaiface.bottom_row * height\n      };\n    };\n\n    this.displaybox = box => {\n      this.setState({\n        box: box\n      });\n      console.log(this.state.box);\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageURL: this.state.input\n      });\n      console.log(this.state.user);\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('https://git.heroku.com/fierce-anchorage-15436.git/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.displaybox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: this.state.isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }), this.state.route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }), \"          \", /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      box: this.state.box,\n      imageURL: this.state.imageURL,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    })) : this.state.route === 'SignIn' ? /*#__PURE__*/React.createElement(SignIn, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 16\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 16\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/sneha/facerecognitionbrain/src/App.js"],"names":["React","Component","Navigation","FaceRecognition","Logo","Clarifai","ImageLinkForm","Rank","Register","Particles","SignIn","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageURL","box","route","isSignedIn","user","email","id","name","entries","joined","constructor","loadUser","data","setState","onInputChange","event","target","calculateFaceLocation","clarifaiface","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displaybox","console","log","state","onButtonSubmit","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","onRouteChange","render"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport Navigation from './Components/Navigation/Navigation';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport Logo from './Components/Logo/Logo';\nimport Clarifai from 'clarifai';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport Register from './Components/Register/Register';\nimport Particles from 'react-particles-js';\nimport SignIn from './Components/SignIn/SignIn';\n\nimport './App.css';\nconst app=new Clarifai.App({\n  apiKey:'d946ffbdf438480a8197b49ced9268a4'\n});\n\n//for the particles bg\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 70,\n      density: {\n        enable: true,\n        value_area: 400\n      }\n    }\n  }\n}\n\nconst initialState={ input: '',\n                     imageURL:'', \n                     box: {}, \n                     route: 'SignIn',\n                     isSignedIn: false,\n                     user:{ email: '',\n                            id: '',\n                            name: '',\n                            entries: 0,\n                            joined: ''\n                         }\n                  }\n\nclass App extends Component{ \n  constructor(){ \n    super(); \n    this.state=initialState;\n }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  //onInputChange is a property of app //when urlentered \n\n  onInputChange=(event) =>{ \n      this.setState({input: event.target.value}); \n      // console.log(this.state.input);\n    }\n\n  //to make the box\n  calculateFaceLocation=(data) => {\n    const clarifaiface = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    // console.log(width,height);\n    // console.log(clarifaiface);\n    return {\n      leftCol: (clarifaiface.left_col * width),\n      topRow: clarifaiface.top_row * height,\n      rightCol: width-(clarifaiface.right_col * width),\n      bottomRow: height-(clarifaiface.bottom_row * height)\n    }\n  }\n\n\ndisplaybox =(box) =>{\n\n  this.setState({box :box});\n    console.log(this.state.box);\n}\n// console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n  //when url submitted\n  onButtonSubmit=()=>{\n    this.setState({imageURL: this.state.input});\n    console.log(this.state.user);\n    app.models\n      .predict(\n            Clarifai.FACE_DETECT_MODEL,\n             this.state.input)\n      .then(response=>  {\n        if (response) {\n          fetch('https://git.heroku.com/fierce-anchorage-15436.git/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n          .then(response => response.json())\n          .then(count=> {\n             this.setState(Object.assign(this.state.user, { entries: count}))\n          })\n          .catch(console.log)\n        }\n        this.displaybox(this.calculateFaceLocation(response))\n      })\n     .catch(err => console.log(err));\n  }\n\n  onRouteChange=(route)=>{\n    if(route === 'signout'){\n      this.setState(initialState)\n    }\n    else if(route === 'home')\n    {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route})\n  }\n    render(){\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesOptions}\n        />\n        <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange} />\n        { this.state.route ==='home'\n          ? \n          <div>\n            <Logo />\n              <Rank\n                name={this.state.user.name}\n                entries={this.state.user.entries}\n              />          <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n\n          <FaceRecognition box={this.state.box} imageURL={this.state.imageURL} />\n          </div>\n          : (\n              this.state.route === 'SignIn'\n              ?<SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n              :<Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}